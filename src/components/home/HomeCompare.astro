---
const { label, title } = Astro.props;

import { Image } from 'astro:assets';
import comparePlates from '../../assets/compare.png';
import compareDotDash from '../../assets/compare-dot-dash.svg';
import compareLine from '../../assets/compare-line.svg?raw'

import HomeCompareMain from './HomeCompareMain.jsx';

---
<section class="home-comp">
    <div class="home-comp-stick">
        <div class="container">
            <div class="home-comp-title-wrap">
                <h2 class="heading txt-up txt-black home-comp-title">
                    <span class="h3">{label}</span><br>
                    <span class="h0">{title}</span>
                </h2>
            </div>
            <div class="home-comp-main grid">
                <div class="home-comp-main-item">
                    Item
                </div>
                <div class="home-comp-main-prog">
                    <div class="home-comp-main-prog-inner">
                        <div class="home-comp-main-prog-plates">
                            <Image src={comparePlates} alt="Compare plates" class="img" />
                        </div>
                        <div class="home-comp-main-prog-dot">
                            <Image src={compareDotDash} alt="" class="img" />
                        </div>
                        <HomeCompareMain client:visible>
                            <Fragment set:html={compareLine} alt="" class="img" slot="plateLine"/>
                        </HomeCompareMain>
                    </div>
                </div>
                <div class="home-comp-main-item">
                    Item
                </div>
            </div>
        </div>
    </div>
</section>


<style lang="scss">
    @import '../../styles/colors.scss';
    @import '../../styles/mixins.scss';
    .home-comp {
        height: 400vh;
        position: relative;
        .container {
            display: flex;
            flex-direction: column;
            height: 100%;
            background-color: var(--cl-txt)FF;
        }
        &-stick {
            position: sticky;
            top: 0;
            height: 100vh;
        }
        &-title-wrap {
            padding-top: 16rem;
            margin-bottom: 8.2rem;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        &-title {
            width: 100%;
            margin: 0 auto;
        }
        &-main {
            grid-template-columns: repeat(16, 1fr);
            align-items: center;
            flex-grow: 1;
            padding-bottom: 10rem;
            &-item {
                display: flex;
                flex-direction: column;
                align-items: center;
                grid-column: span 4;
            }
            &-prog {
                grid-column: span 8;
                padding-left: 6.2rem;
                padding-right: 6.2rem;
                display: flex;
                align-items: center;
                justify-content: center;
                &-inner {
                    width: calc(100vh - 16rem - 10rem - 8.2rem - var(--h0-fs) - var(--h3-fs));
                    position: relative;
                }
                &-plates {
                }
                &-dot {
                    z-index: 2;
                    position: absolute;
                    inset: 0;
                }
                &-line :global() {
                    
                }
                &:global(.home-comp-main-prog-line) {
                    z-index: 1;
                    position: absolute;
                    inset: 0rem;
                    --arcL: calc(2 * var(--PI) * 315);
                    --prog: 0;
                    --arcOffset: calc(var(--arcL) * (-1 * (var(--prog) - 100) / 100));
                    transform: rotate(-90deg);
                }
            }
        }
    }
</style>