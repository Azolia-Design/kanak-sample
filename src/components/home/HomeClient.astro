---
const { title, sub_title, client_list } = Astro.props;
import { Image } from "astro:assets";
import quality from '../../assets/quality.png';
import logo from '../../assets/logo-mcdonald.svg';
import map from '../../assets/usa-map.svg';
import {getByUID} from '../../prismic.js';

let newTitle = title.split('\n').map((i: any, idx: number) => {
    return (idx === title.split('\n').length - 1) ? i : i + '<br>'
})

let lastWord = newTitle.join(' ').split(' ')[newTitle.join(' ').split(' ').length - 1]
newTitle = newTitle.join('').replace(lastWord, `<div class="txt-green">${lastWord}</div>`);

const list = await Promise.all(
    client_list.map(async (client: any) => {
        let item = getByUID('client', client.item.uid)
        return item
    })
)
---
<section class="home-client">
    <div class="container">
        <div class="grid">
            <div class="home-client-title-wrap">
                <h2 class="heading h0 txt-up txt-black home-client-title">
                    <Fragment set:html={newTitle} />
                    <Image src={quality} alt="quality" class="home-client-title-quality" width={quality.width / 2}/>
                </h2>
            </div>
            <div class="home-client-sub-wrap">
                <p class="heading h6 txt-up txt-black home-client-sub">
                    {sub_title}
                </p>
            </div>
            <div class="grid-holder"></div>
            <div class="home-client-map">
                <Image src={map} alt="McDonald" />
            </div>
            {list.map((item) => (
                <div class="home-client-item">
                    <Image src={item.data.client_logo.url} alt="McDonald" width={item.data.client_logo.dimensions.width} height={item.data.client_logo.dimensions.height}/>
                </div>
            ))}
        </div>
    </div>
</section>

<script>

</script>

<style lang="scss">
    @use '../../styles/mixins' as *;
    .home-client {
        padding-bottom: 7rem;
        .grid {
            grid-template-columns: repeat(6, 1fr);
            column-gap: 0;
            &-holder {
                grid-column: 4/5;
                grid-row: 2/3;
                width: 100%;
                height: 0;
                padding-top: 100%;
            }
        }
        &-title-wrap {
            grid-column: 1/4;
            grid-row: 1/4;
            margin-top: 2.2rem;
        }
        &-title {
            max-width: 78rem;
            position: relative;
            &-quality {
                top: 9rem;
                left: 52rem;
                width: 8.8rem;
                position: absolute;
            }
        }
        &-sub-wrap {
            grid-column: 4/6;
            grid-row: 1/2;
            margin-top: 3.3rem;
        }
        &-sub {
            max-width: 31.3rem;
        }
        &-item {
            aspect-ratio: 1/1;
            border: solid .2rem var(--cl-txt);
            margin: -.1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            img {
                @include size(18rem);
            }
        }
        &-map {
            border: solid .2rem var(--cl-txt);
            grid-column: 4/7;
            grid-row: 4/6;
            padding-left: 6.9rem;
            padding-right: 5.9rem;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: -.1rem;
        }
    }
</style>