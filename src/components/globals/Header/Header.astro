---
import { Image } from "astro:assets";
import { getImage } from "astro:assets";
import kanakLogo from "@assets/kanak-logo.svg";
import recycleIc from "@assets/recycle.svg";
import headFlag from "@assets/head-flag-2.svg";
import bodyFlag from "@assets/body-flag.svg";
import tailFlag from "@assets/tail-flag-2.svg";
import extIcon from "@assets/ext-arr-menu.svg?raw";
import icDropdown from "@assets/ic-arrow-down.svg?raw";
import { getByUID, getPage } from "@/prismic";
import HeaderGlobal from "./Header";
import { formatData } from "@utils/text";
const currYear = new Date().getFullYear();

const homeData = await getPage("home")
const homeKustomerList = await Promise.all(
    homeData.data.industry_list.map((industry: any) => {
        let item = getByUID("industry", industry.item.uid);
        return item;
    }),
);
const kustomerList = homeKustomerList.map((el, idx) => ({
    name: el.data.title,
    url: `/kustomers/${el.uid}`,
}));
const homeKatalogList = await Promise.all(
    homeData.data.product_kategory_list.map((industry: any) => {
        let item = getByUID("product_group", industry.item.uid);
        return item;
    }),
);

let katalogList = homeKatalogList
    .filter((el, idx) => el.data.is_sustainables_ !== true)
    .map((el, idx) => ({
        name: el.data.name,
        url: `/katalog?category=${formatData(el.data.name)}`,
    }));

const pages = [
    {
        name: "[K]ustomers",
        type: "dropdown",
        sub_menu: [...kustomerList],
    },
    {
        name: "[K]atalog",
        type: "dropdown",
        sub_menu: [
            { name: "All Product", url: "/katalog" },
            ...katalogList,
        ],
    },
    {
        name: "Solutions",
        type: "dropdown",
        sub_menu: [
            { name: "Private label", url: "/private-label" },
            { name: "Kustom packaging", url: "/kustom-packaging-solutions" },
            { name: "Testing, QC & [K]ompliance", url: "/qc-procedures" },
        ],
    },
    { name: "Fulfillment", link: "/fulfillment", type: "" },
    { name: "[K]ase Studies", link: "/kase-studies", type: "" },
    // {
    //     name: "Resources",
    //     type: "dropdown",
    //     sub_menu: [
    //         { name: "Insights", url: "/insights" },
    //         { name: "Kase Studies", url: "/kase-studies" },
    //     ],
    // },
    {
        name: "[K]now us",
        type: "dropdown",
        sub_menu: [
            { name: "[K]now us", url: "/about" },
            { name: "Sustainability [K]ommitment", url: "/sustainability" },
            { name: "Pa[k]way", url: "/pakway" },
        ],
    },
];
const bodyFlagIc = await getImage({ src: bodyFlag, format: "svg" });
const pathname = new URL(Astro.request.url).pathname;
---

<HeaderGlobal
    pages={pages}
    bodyFlag={bodyFlagIc.src}
    currYear={currYear}
    pathname={pathname}
    check={katalogList}
    client:load
>
    <Image src={kanakLogo} alt="Kanak Logo" slot="logo" class="img-h" />
    <Image src={recycleIc} alt="Recycle Icon" slot="recycleIc" />
    <Image src={headFlag} alt="" slot="headFlag" />
    <Image src={tailFlag} alt="" slot="tailFlag" />
    <Fragment set:html={extIcon} slot="extIcon" />
    <Fragment set:html={icDropdown} slot="icDropdown" />
</HeaderGlobal>
