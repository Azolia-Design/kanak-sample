---
import Image from "astro/components/Image.astro";
import { getAllByType, getByUID } from "@/prismic";
import { formatData } from "@/components/utils/text";
import KatalogMain from "./Main";

const allTag = await getAllByType("case_study");
const tagList = [];
allTag.map((el, idx) => {
  !tagList.includes(el.data.category) && tagList.push(el.data.category);
});

const allCate = await getAllByType("product_group");
const cateNotSustainable = [];
allCate.map(
  (item) =>
    item.data.is_sustainables_ === false && cateNotSustainable.push(item),
);
const cateList = cateNotSustainable.reduce(
  (acc, curr) => acc.concat(curr.data.name),
  [],
);
const productList = [];
await Promise.all(
  cateNotSustainable
    .reduce(
      (acc, curr) =>
        acc.concat({
          list: curr.data.product_list,
          name: curr.data.name,
        }),
      [],
    )
    .map(async (data: any) => {
      await Promise.all(
        data.list.map(async (el: any) => {
          const item = await getByUID("product", el.product.uid);
          productList.push({ ...item, cate: formatData(data.name) });
        }),
      );
    }),
);
---

<KatalogMain
  tagList={tagList}
  cateList={cateList}
  allItem={productList}
  client:load
/>
