---
import Image from "astro/components/Image.astro";
import { getAllByType, getByUID } from "@/prismic";

import KustomerSustain from "./Sustainable";

import sustainable from "@assets/ic-sustainable.svg";
import PDFIcon from "@assets/ic-pdf.svg?raw";

const susList = Astro.props.list.map((item) => item.sustainable_item.uid);
const productGroup = await getAllByType("product_group");

let sustainList = productGroup.filter(
    ({ uid, data }) => data.is_sustainables_ === true && susList.includes(uid),
);
const cateList = [];
sustainList.map(({ data, uid }, idx) => {
    const uidList = data.product_list.map((item) => item.product.uid);

    !cateList.includes(data.name) &&
        cateList.push({
            name: data.name,
            uid: uid,
            list: uidList,
        });
});

const productList = await Promise.all(
    sustainList
        .reduce((acc, curr) => acc.concat(curr.data.product_list), [])
        .map(async (data: any) => {
            let item = getByUID("product", data.product.uid);
            return item;
        }),
);
---

<KustomerSustain
    client:visible={{ rootMargin: "100% 0px 100% 0px" }}
    subtitle={Astro.props.subtitle}
    cateList={cateList}
    productList={productList}
>
    <Fragment set:html={PDFIcon} slot="PDFIcon" />
    <Image src={sustainable} alt="" slot="sustainable" class="img img-fill" />
</KustomerSustain>
