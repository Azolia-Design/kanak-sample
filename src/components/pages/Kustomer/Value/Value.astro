---
import { Image, getImage } from "astro:assets";
import { getByUID } from "@/prismic.js";
import icTree from "@assets/ic-tree.svg";
import icAward from "@assets/ic-award.svg";
import bgTextureDark from "@assets/bg-texture-dark-sm.png";
import KustomerValueItem from "./ValueItem";
import KustomerValue from "./Value";

const list = await Promise.all(
    Astro.props.value_list.map(async (value: any) => {
        let item = getByUID("values", value);
        return item;
    }),
);

const OpBgTextureDark = await getImage({
    src: bgTextureDark,
    format: "webp",
    width: bgTextureDark.width,
});
const title = Astro.props.title;
const newTitle = title.replace(
    "ECO-EXCELLENCE",
    `<span class="txt-green">ECO-</span><span class="txt-green">EXCELLENCE</span>`,
);
---

<KustomerValue
    bgText={OpBgTextureDark}
    describe={Astro.props.describe}
    client:visible={{ rootMargin: "100% 0px 100% 0px" }}
>
    <Fragment set:html={newTitle} slot="title" />
    <Fragment slot="list">
        {
            list.map(
                (item: any, idx: number) =>
                    idx < 2 && (
                        <KustomerValueItem
                            idx={idx}
                            key={idx}
                            sub_title={item.data.sub_title}
                            label={item.data.label}
                        >
                            <Fragment
                                set:html={item.data.title[0].text.replaceAll(
                                    "\n",
                                    "<br/>",
                                )}
                                slot="title"
                            />
                            <Image
                                src={item.data.icon.url}
                                alt=""
                                class="ic ic-150"
                                slot="ic"
                                width={item.data.icon.dimensions.width}
                                height={item.data.icon.dimensions.height}
                            />
                        </KustomerValueItem>
                    ),
            )
        }
    </Fragment>
    <Image src={icTree} alt="" class="ic ic-150" slot="icTree" />
    <Image src={icAward} alt="" class="ic ic-150" slot="icAward" />
</KustomerValue>
