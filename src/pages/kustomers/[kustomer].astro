---
import { getPage, getAllByType } from "@/prismic.js";
import Layout from "@/layouts/Layout.astro";
import Hero from "@pages/Kustomer/Hero/Hero.astro";
import Premble from "@pages/Kustomer/Premble/Premble.astro";
import Client from "@pages/Kustomer/Client/Client.astro";
import Service from "@pages/Kustomer/Service/Service.astro";
import Sustainable from "@pages/Kustomer/Sustainable/Sustainable.astro";
import Explore from "@pages/Kustomer/Explore/Explore.astro";
import Commitment from "@pages/Kustomer/Commitment/Commitment.astro";
import CaseStudy from "@pages/Kustomer/CaseStudies/Casestudies.astro";
import Value from "@pages/Kustomer/Value/Value.astro";
import Award from "@pages/Kustomer/Award/Award.astro";
import CTA from "@pages/Kustomer/CTA/CTA.astro";
import Benefit from "@pages/Kustomer/Benefit/Benefit.astro";
import Catalogue from "@pages/Kustomer/Catalogue/Catalogue.astro";

export async function getStaticPaths() {
    const list = await getAllByType("industry");
    return list.map((item) => {
        return {
            params: { kustomer: item.uid },
            props: { item },
        };
    });
}

const { kustomer } = Astro.params;
const { item } = Astro.props;
const homeData = await getPage("home");

const serviceItem = [];
item.data.service_sub_items.forEach((el, idx) => {
    el.item.uid && serviceItem.push(el.item.uid);
});
const exploreData = [
    {
        label: "PRIVATE LABEL SOLUTIONS",
        title: "Your Brand, Our Benchmark",
        list: [
            {
                title: "National Brand Quality",
                describle:
                    "Match the best with our full suite of Chinet®-equivalent eco-plates, platters, bowls, and cups that boast equal or superior strength and meet strict compostability standards.",
            },
            {
                title: "Retail Ready in Real-Time",
                describle:
                    "Always stocked, always ready—meet demand spikes or market shifts without breaking a sweat.",
            },
            {
                title: "Mix, match, and ship—fast!",
                describle:
                    "All products are packaged in our Fort Wayne clean room using top-quality, domestically sourced materials, with same-day order processing and allocation.",
            },
        ],
    },
    {
        label: "CUSTOM PACKAGING SOLUTIONS",
        title: "Packaging That Tells Your Story",
        list: [
            {
                title: "Packaging Perfection",
                describle:
                    "Your product's wow factor matters.  From cool shapes to eye-catching prints, our custom options make sure your product shines on shelves and grabs attention.",
            },
            {
                title: "Effortless Execution",
                describle:
                    "Our custom packaging solutions are meticulously designed to comply with safety and regulatory standards.",
            },
            {
                title: "Brand-Centric Approach",
                describle:
                    "Your brand story is our guide. Every product reflects your brand's promise, going above and beyond.",
            },
        ],
    },
];

const listCaseStudy = await getAllByType("case_study");
const filterCaseStudy = listCaseStudy.filter(
    (item) => item.data.category.toLowerCase().replace(" ", "-") === kustomer,
);
---
<Layout
    title={item.data.title}
    footer_cta={item.data.cta_title[0]?.text}
    footer_bg={item.data.cta_background}
    >
    <Hero label={item.data.hero_label} title={item.data.hero_title[0].text} />
    {item.data.hero_subtitle && <Premble title={item.data.hero_subtitle} />}
    <Client
        title={homeData.data.client_title[0].text}
        sub_title={homeData.data.client_sub_title[0].text}
        client_list={homeData.data.client_list}
    />
    {
        item.data.service_title && (
            <Service
                title={item.data.service_title[0].text}
                listItems={serviceItem}
            />
        )
    }
    {
        item.data.sustainable_subtitle != "" && (
            <>
                <Sustainable
                    subtitle={item.data.sustainable_subtitle[0].text}
                    list={item.data.sustainable_list}
                />
                <Benefit
                    title={item.data.benefit_title[0].text}
                    list={item.data.benefit_list.map((el) => el.item.uid)}
                />
                <Catalogue
                    label={item.data.katalog_label}
                    title={item.data.katalog_title[0].text}
                    describe={item.data.katalog_des}
                />
            </>
        )
    }
    <Explore list={exploreData} />
    {
        item.data.commitment_title[0] !== undefined && (
            <Commitment
                label={item.data.commitment_label}
                title={item.data.commitment_title[0].text}
                list={item.data.commitment_list}
            />
        )
    }
    {
        item.data.kase_study_title[0] !== undefined && (
            <CaseStudy
                label={item.data.kase_study_label}
                title={item.data.kase_study_title[0].text}
                list={filterCaseStudy}
            />
        )
    }
    {
        item.data.value_title[0] !== undefined && (
            <Value
                describe={item.data.value_describe}
                title={item.data.value_title[0].text}
                value_list={item.data.value_list.map(({ item }) => item.uid)}
            />
        )
    }
    {
        item.data.award_title[0] !== undefined && (
            <Award
                title={item.data.award_title[0].text}
                describe={item.data.award_describe}
                label={item.data.award_label}
                btn={item.data.award_button}
                medal={item.data.award_medal}
                qr={item.data.award_qr}
            />
        )
    }
</Layout>
